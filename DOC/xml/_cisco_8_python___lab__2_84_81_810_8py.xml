<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="_cisco_8_python___lab__2_84_81_810_8py" kind="file" language="Python">
    <compoundname>Cisco.Python_Lab_2.4.1.10.py</compoundname>
    <innernamespace refid="namespace_cisco">Cisco</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespace_cisco" refkind="compound"><highlight class="comment">#<sp/>LAB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Estimated<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>10-15<sp/>minutes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Level<sp/>of<sp/>difficulty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Easy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Objectives</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/>becoming<sp/>familiar<sp/>with<sp/>the<sp/>concept<sp/>of<sp/>numbers,<sp/>operators,<sp/>and<sp/>arithmetic<sp/>operations<sp/>in<sp/>Python</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#<sp/>performing<sp/>basic<sp/>calculations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Scenario</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Take<sp/>a<sp/>look<sp/>at<sp/>the<sp/>code<sp/>in<sp/>the<sp/>editor:<sp/>it<sp/>reads<sp/>a<sp/>float<sp/>value,<sp/>puts<sp/>it<sp/>into<sp/>a<sp/>variable<sp/>named<sp/>x,<sp/>and<sp/>prints<sp/>the<sp/>value<sp/>of<sp/>a<sp/>variable<sp/>named<sp/>y.<sp/>Your<sp/>task<sp/>is<sp/>to<sp/>complete<sp/>the<sp/>code<sp/>in<sp/>order<sp/>to<sp/>evaluate<sp/>the<sp/>following<sp/>expression:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#<sp/>3x3<sp/>-<sp/>2x2<sp/>+<sp/>3x<sp/>-<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">#<sp/>The<sp/>result<sp/>should<sp/>be<sp/>assigned<sp/>to<sp/>y.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Remember<sp/>that<sp/>classical<sp/>algebraic<sp/>notation<sp/>likes<sp/>to<sp/>omit<sp/>the<sp/>multiplication<sp/>operator<sp/>-<sp/>you<sp/>need<sp/>to<sp/>use<sp/>it<sp/>explicitly.<sp/>Note<sp/>how<sp/>we<sp/>change<sp/>data<sp/>type<sp/>to<sp/>make<sp/>sure<sp/>that<sp/>x<sp/>is<sp/>of<sp/>type<sp/>float.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Keep<sp/>your<sp/>code<sp/>clean<sp/>and<sp/>readable,<sp/>and<sp/>test<sp/>it<sp/>using<sp/>the<sp/>data<sp/>we&apos;ve<sp/>provided,<sp/>each<sp/>time<sp/>assigning<sp/>it<sp/>to<sp/>the<sp/>x<sp/>variable<sp/>(by<sp/>hardcoding<sp/>it).<sp/>Don&apos;t<sp/>be<sp/>discouraged<sp/>by<sp/>any<sp/>initial<sp/>failures.<sp/>Be<sp/>persistent<sp/>and<sp/>inquisitive.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Test<sp/>Data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Sample<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">#<sp/>x<sp/>=<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">#<sp/>x<sp/>=<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">#<sp/>x<sp/>=<sp/>-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Expected<sp/>Output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">#<sp/>y<sp/>=<sp/>-1.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">#<sp/>y<sp/>=<sp/>3.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">#<sp/>y<sp/>=<sp/>-9.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">#-----------#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(0,<sp/>3):</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>i<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="45" refid="namespace_cisco_1a7194c7b178ddd6ae57abeaddd5155caa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>0<sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>hardcode<sp/>your<sp/>test<sp/>data<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>i<sp/>==<sp/>1:</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>1<sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>hardcode<sp/>your<sp/>test<sp/>data<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>i<sp/>==<sp/>2:</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>-1<sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>hardcode<sp/>your<sp/>test<sp/>data<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>float(x)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/>define<sp/>the<sp/>expression<sp/>as<sp/>a<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="namespace_cisco_1ac31f777abe756fb4b29a9369858cd111" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespace_cisco_1ac31f777abe756fb4b29a9369858cd111" kindref="member">expression</ref>():</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>3*x**<sp/>3<sp/>-<sp/>2*x**2<sp/>+<sp/>3*x-1</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>run<sp/>the<sp/>expression</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="namespace_cisco_1a2900ad212e97daecd1c92fc20fcc117d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>y<sp/>=<sp/><ref refid="namespace_cisco_1ac31f777abe756fb4b29a9369858cd111" kindref="member">expression</ref>()</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;y<sp/>=&quot;</highlight><highlight class="normal">,<sp/>y)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>write<sp/>your<sp/>code<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="Module 2/Cisco.Python_Lab_2.4.1.10.py"/>
  </compounddef>
</doxygen>
